apiVersion: 1.0.0
metadata:
  name: wh-dispatcher
attributes:
  persistVolumes: 'false'
projects:
  - name: wh-dispatcher
    source:
      location: 'https://github.com/cbonami/wh-dispatcher.git'
      type: git
      branch: master
components:
  - id: redhat/java/latest
    memoryLimit: 1400Mi
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: 8080/tcp
        port: 8080
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/user/.m2
    alias: tools
    image: 'quay.io/eclipse/che-java11-maven:7.26.2'
    env:
      - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/user'
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
  - endpoints:
      - name: tracing-ui
        port: 16686
      - attributes:
          public: 'false'
        name: collector-grpc
        port: 14250
      - attributes:
          public: 'false'
        name: collector-http
        port: 14268
      - attributes:
          public: 'false'
        name: collector-zipkin
        port: 9411
      - attributes:
          public: 'false'
        name: agent-config
        port: 5778
      - attributes:
          public: 'false'
        name: 6831/udp
        port: 6831
      - attributes:
          public: 'false'
        name: 6832/udp
        port: 6832
    memoryLimit: 128Mi
    type: dockerimage
    volumes:
      - name: tmp
        containerPath: /tmp
    alias: tracing
    image: 'jaegertracing/all-in-one:latest'
    env:
      - value: '5000'
        name: MEMORY_MAX_TRACES
      - value: '9411'
        name: COLLECTOR_ZIPKIN_HTTP_PORT
commands:
  - name: maven build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/web-java-spring-boot'
        type: exec
        command: mvn clean install
        component: tools
  - name: run webapp
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/web-java-spring-boot'
        type: exec
        command: 'mvn spring-boot:run'
        component: tools
  - name: stop webapp
    actions:
      - type: exec
        command: echo 'Stopping the application...' && kill $(pidof java) && echo 'The application has been successfully stopped'
        component: tools
  - name: run webapp (debug mode)
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/web-java-spring-boot'
        type: exec
        command: |
          java -jar -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 \
          target/*.jar
        component: tools
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            }]
          }
        type: vscode-launch
