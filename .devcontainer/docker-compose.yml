version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # [Choice] pick a Java version: 11, 14
        VARIANT: 11
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000
        INSTALL_MAVEN: 'true'
        INSTALL_GRADLE: 'false'
        INSTALL_NODE: 'false'
        NODE_VERSION: 'lts/*'

    volumes:
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the redis container, allows "forwardPorts" in devcontainer.json function.
    #network_mode: service:redis
    networks:
      - internal

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  redis:
    image: 'docker.io/bitnami/redis:6.0-debian-10'
    restart: unless-stopped
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
    # Add "forwardPorts": ["6379"] to **devcontainer.json** to forward Redis locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    networks:
      - internal

  admin-server:
    image: 'registry.hub.docker.com/cbonami/wh-admin-server:latest'
    restart: unless-stopped
    ports:
      - '8090:8090'
    networks:
      - internal

  wh-subscriber-dummy:
    image: 'registry.hub.docker.com/cbonami/wh-subscriber-dummy:v3'
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      - ADMIN_SERVER_HOST=admin-server
      - ADMIN_SERVER_PORT=8090
    networks:
      - internal

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus:/prometheus
    depends_on:
      - wh-subscriber-dummy
    networks:
      - internal

  grafana:
    image: grafana/grafana:7.4.0
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: grafana
      GF_SECURITY_ADMIN_PASSWORD: grafana
      PROMETHEUS_HOST: prometheus:9090
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - internal

networks:
  internal:

volumes:
  redis_data:
  prometheus:
  grafana-storage:
